user  nginx;
worker_processes  1;

events {
  worker_connections  1024;
}

http {

  server {
    listen 80;
    listen [::]:80;
    server_name soumithri93.com www.soumithri93.com;

    location ~ /.well-known/acme-challenge/ {
      allow all;
      default_type text/plain;
      root /var/www/certbot;
    }

    location / {
      rewrite ^ https://$host$request_uri? permanent;
    }
  }
  
  include /etc/nginx/mime.types;
  client_max_body_size 100m;

  upstream backend {
    server backend:8000;
  }

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name soumithri93.com www.soumithri93.com;   
   
    server_tokens off;

    ssl_certificate /etc/letsencrypt/live/soumithri93.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/soumithri93.com/privkey.pem;

    ssl_buffer_size 8k;

    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    ssl_prefer_server_ciphers on;
    
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;
    
    ssl_ecdh_curve secp384r1;
    ssl_session_tickets off;

    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 8.8.8.8;

    root /dist/;
    index index.html;

    # backend urls
    location ~ ^/(admin|api) {
      proxy_redirect off;
      proxy_pass http://backend;
      #proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      #proxy_set_header Host $http_host;
      add_header X-Frame-Options "SAMEORIGIN" always;
      add_header X-XSS-Protection "1; mode=block" always;
      add_header X-Content-Type-Options "nosniff" always;
      add_header Referrer-Policy "no-referrer-when-downgrade" always;
      add_header Content-Security-Policy "default-src * data: 'unsafe-eval' 'unsafe-inline'" always;
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
      # enable strict transport security only if you understand the implications
    }

    # static files
    location /static/ {    
      autoindex on;    
      alias /usr/src/app/static/;
    }

    # frontend
    location / {
      try_files $uri $uri/ @rewrites;
    }

    location @rewrites {
      rewrite ^(.+)$ /index.html last;
    }

    location /media/ {
        alias /usr/src/app/media/;
    }
  }
}
